今天主要进行了：ajax方案二，三，复杂对象请求处理，自定义异常机制的环境搭建。

注意点：


学习流程：1.ajax发送复杂对象：创建几个类，在前端中命名好要发送的数据，将json对象转换为字符串，发送ajax请求。后端中用@RequestBody接收
         2.统一项目中ajax请求返回的结果：创建工具类ResultEntity来，三个方法：请求成功无需返回响应的方法，请求成功需返回响应的方法，请求失败返回失败信息的方法
         3.测试：创建ResultEntity类对象，用请求成功需返回响应的方法测试，返回测试类对象，前端datatype改为json，回调函数调成console.log，观察控制台信息
         4.建立异常映射机制：4.1 建立基于xml的异常映射：springmvc配置文件中配置异常类型和具体视图页面的对应关系。请求==>@RequestMapping==>基于xml异常映射来处理
                          4.2 创建CrowdUtil类，判断当前请求是否为ajax请求，是返回true，不是返回false
                          4.3 创建基于注解的异常映射：创建CrowdExceptionResolver，用@ControllerAdvice标签标注类，表示是个异常处理器类
                                                  判断是否为ajax请求，若是则创建ResultEntity类对象，调用请求失败返回失败信息的方法，将失败信息转换为json字符串并返回给浏览器
                                                  若不是ajax请求，则创建ModelAndView对象，将Exception存入其中，设置视图名称，返回ModelAndView对象
         5.创建常量类:管理常量，避免某个字母拼写错误。
       
知识点：
1.415错误总结：415错误出现的原因：请求数据发送给服务器，服务器无法识别这种数据类型，因此拒绝服务
             415错误的解决办法：前端需要先转换成json字符串，在ajax请求中加入contentType定义请求体的数据类型（告诉服务器是这种类型，让其处理）
                              后端用@RequestBody进行接收，保持类的属性名或者变量名与json字符串的key名字一致，最后再由@ResponseBody将响应内容直接返回给浏览器
             idea需要额外注意一点：在springmvc配置文件中配置注解驱动时，idea是能够自动引入mvc命名空间的（idea的方便之处，但也容易出错），在使用时确认所引的mvc命名空间是否正确，
             如果不正确，@RequestBody不报错，但注解不起作用。在启动项目时还是会出现415错误，且错误十分难找。
2.ModelAndView作用：2.1 返回指定页面 setViewName方法（同springmvc配置文件中的视图解析器一同使用）；另：其构造方法也可指定返回的页面名称
                   2.2 返回所需数值 addObject方法（作用同request.setattribute方法一样，在一个页面请求中传递处理的数据，用于传递控制方法处理结果数据到结果页面)
                   ,addObject方法参数列表的具体意义???前一个参数字符串类型,和前端el表达式有联系??   已解决：addObject参数列表中，存放的是（String key,Object value），前端可通过
                   el表达式的${key}来获取到其内的value.
